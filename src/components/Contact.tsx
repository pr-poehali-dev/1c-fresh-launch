import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { telegramBot } from '@/services/telegramBot';
import { toast } from 'sonner';
import Icon from "@/components/ui/icon";
import TelegramContactForm from "@/components/TelegramContactForm";
import CustomerOrderForm from "@/components/CustomerOrderForm";
import { useTelegramWebApp } from "@/hooks/useTelegramWebApp";

export default function Contact() {
  const [showOrderForm, setShowOrderForm] = useState(false);
  
  const handleCallbackRequest = () => {
    setShowOrderForm(true);
  };
  
  const testTelegramBot = async () => {
    try {
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...');
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –±–æ—Ç–∞
      const botInfo = await telegramBot.getMe();
      console.log('Bot info:', botInfo);
      
      if (botInfo.success) {
        toast.success('–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: ' + botInfo.botInfo?.first_name);
        
        // –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã
        const updates = await telegramBot.getUpdates();
        if (updates.success && updates.updates?.length) {
          console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã:', updates.updates);
          toast.success(`–ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: ${updates.updates.length}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è chat_id`);
          
          // –ü–æ–∫–∞–∑–∞—Ç—å chat_id –≤ –∫–æ–Ω—Å–æ–ª–∏
          updates.updates.forEach((chat: any, index: number) => {
            console.log(`üí¨ –ß–∞—Ç ${index + 1}:`, {
              chatId: chat.chatId,
              —Ç–∏–ø: chat.chatType,
              –Ω–∞–∑–≤–∞–Ω–∏–µ: chat.chatTitle,
              –æ—Ç: chat.from
            });
          });
          
          const chatIds = updates.updates.map((chat: any) => chat.chatId).join(', ');
          toast.info(`Chat IDs: ${chatIds}`);
        } else {
          toast.warning('‚ùó –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–Ω–∞—á–∞–ª–∞!');
        }
      } else {
        toast.error('‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ' + botInfo.error);
      }
    } catch (error) {
      console.error('Test error:', error);
      toast.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ' + (error as Error).message);
    }
  };
  const telegramWebApp = useTelegramWebApp();

  return (
    <section id="contact" className="py-20 bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-display font-bold text-gray-900 mb-4">
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
          </h2>
          <p className="text-xl text-gray-600">
            –ì–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º —Ç–∞—Ä–∏—Ñ–∞
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12">
          {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram —Ñ–æ—Ä–º—É –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram, –æ–±—ã—á–Ω—É—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ */}
          {telegramWebApp.isInTelegram ? (
            <TelegramContactForm 
              title="–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É"
              subtitle="–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞"
            />
          ) : (
            <Card className="p-8">
              <CardHeader className="p-0 mb-6">
                <CardTitle className="font-display font-bold text-2xl text-gray-900">
                  –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É
                </CardTitle>
                <CardDescription>
                  –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞
                </CardDescription>
              </CardHeader>
              <CardContent className="p-0">
                <form className="space-y-4">
                  <Input placeholder="–í–∞—à–µ –∏–º—è" />
                  <Input type="email" placeholder="Email" />
                  <Input type="tel" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" />
                  <Textarea placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ" rows={4} />
                  <Button className="w-full bg-orange-500 hover:bg-orange-600 text-white rounded-[30px]">
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                  </Button>
                </form>
              </CardContent>
            </Card>
          )}

          <div className="space-y-8">
            <div>
              <h3 className="font-display font-bold text-xl text-gray-900 mb-6">
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h3>
              <div className="space-y-4">
                <div className="flex items-start">
                  <Icon
                    name="Phone"
                    className="text-orange-500 mr-3 mt-1"
                    size={20}
                  />
                  <div>
                    <p className="font-semibold text-gray-900">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                    <p className="text-gray-600">+7 (342) 270‚Äí00‚Äí01</p>
                  </div>
                </div>
                <div className="flex items-start">
                  <Icon
                    name="Mail"
                    className="text-orange-500 mr-3 mt-1"
                    size={20}
                  />
                  <div>
                    <p className="font-semibold text-gray-900">Email</p>
                    <p className="text-gray-600">ivanickiy@centerai.tech</p>
                  </div>
                </div>
                <div className="flex items-start">
                  <Icon
                    name="Clock"
                    className="text-orange-500 mr-3 mt-1"
                    size={20}
                  />
                  <div>
                    <p className="font-semibold text-gray-900">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</p>
                    <p className="text-gray-600">
                      –ü–Ω-–ü—Ç: 9:00-18:00
                      <br />
                      –ü–æ–¥–¥–µ—Ä–∂–∫–∞: 24/7
                    </p>
                  </div>
                </div>
                <div className="flex items-start">
                  <Icon
                    name="MapPin"
                    className="text-orange-500 mr-3 mt-1"
                    size={20}
                  />
                  <div>
                    <p className="font-semibold text-gray-900">–ê–¥—Ä–µ—Å</p>
                    <p className="text-gray-600">
                      614007, –ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π, –≥–æ—Ä–æ–¥ –ü–µ—Ä–º—å,
                      <br />
                      —É–ª. –†–µ–≤–æ–ª—é—Ü–∏–∏, –¥. 14, –∫–≤. 57
                    </p>
                  </div>
                </div>
              </div>
            </div>

            <Card className="p-6 bg-gradient-to-br from-orange-50 to-indigo-50 border-orange-200">
              <CardContent className="p-0">
                <h4 className="font-display font-semibold text-lg text-gray-900 mb-2">
                  –ù—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è?
                </h4>
                <p className="text-gray-600 mb-4">
                  –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ–º–æ–≥—É—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è
                  –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
                </p>
                <div className="space-y-2">
                  <Button 
                    onClick={handleCallbackRequest}
                    className="bg-orange-500 hover:bg-orange-600 text-white rounded-[30px]"
                  >
                    <Icon name="Phone" size={16} className="mr-2" />
                    –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫
                  </Button>
                  <Button 
                    onClick={testTelegramBot}
                    variant="outline" 
                    className="w-full rounded-[30px]"
                  >
                    üß™ –¢–µ—Å—Ç Telegram –±–æ—Ç–∞
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
      
      {showOrderForm && (
        <CustomerOrderForm
          serviceType="–ó–∞–∫–∞–∑ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞"
          serviceDetails="–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è"
          onClose={() => setShowOrderForm(false)}
        />
      )}
    </section>
  );
}