import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { telegramBot } from "@/services/telegramBot";
import { toast } from "sonner";
import Icon from "@/components/ui/icon";
import TelegramContactForm from "@/components/TelegramContactForm";
import CustomerOrderForm from "@/components/CustomerOrderForm";
import { useTelegramWebApp } from "@/hooks/useTelegramWebApp";

export default function Contact() {
  const [showOrderForm, setShowOrderForm] = useState(false);
  const [activeTab, setActiveTab] = useState<"contact" | "company">("contact");

  const handleCallbackRequest = () => {
    setShowOrderForm(true);
  };

  const testTelegramBot = async () => {
    try {
      console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...");

      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –±–æ—Ç–∞
      const botInfo = await telegramBot.getMe();
      console.log("Bot info:", botInfo);

      if (botInfo.success) {
        toast.success("–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: " + botInfo.botInfo?.first_name);

        // –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã
        const updates = await telegramBot.getUpdates();
        if (updates.success && updates.updates?.length) {
          console.log("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã:", updates.updates);
          toast.success(
            `–ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: ${updates.updates.length}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è chat_id`,
          );

          // –ü–æ–∫–∞–∑–∞—Ç—å chat_id –≤ –∫–æ–Ω—Å–æ–ª–∏
          updates.updates.forEach((chat: any, index: number) => {
            console.log(`üí¨ –ß–∞—Ç ${index + 1}:`, {
              chatId: chat.chatId,
              —Ç–∏–ø: chat.chatType,
              –Ω–∞–∑–≤–∞–Ω–∏–µ: chat.chatTitle,
              –æ—Ç: chat.from,
            });
          });

          const chatIds = updates.updates
            .map((chat: any) => chat.chatId)
            .join(", ");
          toast.info(`Chat IDs: ${chatIds}`);
        } else {
          toast.warning(
            "‚ùó –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–Ω–∞—á–∞–ª–∞!",
          );
        }
      } else {
        toast.error("‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: " + botInfo.error);
      }
    } catch (error) {
      console.error("Test error:", error);
      toast.error("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: " + (error as Error).message);
    }
  };
  const telegramWebApp = useTelegramWebApp();

  return (
    <section id="contact" className="py-20 bg-white">
      <div className="max-w-[1980px] mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="mb-12">
          <h2 className="text-4xl font-display font-bold text-gray-900 mb-4 uppercase">
            –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?
          </h2>
          <p className="text-gray-500">
            –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –ø–æ–¥—Ä–æ–±–Ω–æ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º
            1C Fresh
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12 items-start">
          {/* Left side - Form */}
          <div>
            {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram —Ñ–æ—Ä–º—É –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram, –æ–±—ã—á–Ω—É—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ */}
            {telegramWebApp.isInTelegram ? (
              <TelegramContactForm title="" subtitle="" />
            ) : (
              <form className="space-y-4">
                <Input
                  placeholder="–ò–º—è*"
                  className="bg-white border-gray-200 rounded-full px-6 py-6 text-gray-400"
                />
                <Input
                  type="tel"
                  placeholder="–¢–µ–ª–µ—Ñ–æ–Ω*"
                  className="bg-white border-gray-200 rounded-full px-6 py-6 text-gray-400"
                />
                <Input
                  type="email"
                  placeholder="–ü–æ—á—Ç–∞*"
                  className="bg-white border-gray-200 rounded-full px-6 py-6 text-gray-400"
                />
                <Textarea
                  placeholder="–í–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è 1–°"
                  rows={6}
                  className="bg-white border-gray-200 rounded-3xl px-6 py-4 text-gray-400 resize-none"
                />
                <Button className="w-full bg-gray-900 hover:bg-gray-800 text-white rounded-full py-6 text-base font-medium">
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å
                </Button>
                <p className="text-sm text-gray-400 text-center">
                  –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å{" "}
                  <span className="underline cursor-pointer">
                    –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                  </span>
                </p>
              </form>
            )}
          </div>

          {/* Right side - Tabs with gradient background */}
          <div className="relative rounded-[60px] overflow-hidden bg-gradient-to-br from-yellow-300 via-orange-400 to-yellow-500 p-8">
            {/* Decorative gradient blobs */}
            <div className="absolute inset-0 pointer-events-none">
              <div className="absolute top-[10%] right-[15%] w-72 h-72 rounded-full bg-gradient-to-br from-red-400 to-orange-500 opacity-80 blur-2xl"></div>
              <div className="absolute bottom-[15%] left-[20%] w-96 h-96 rounded-full bg-gradient-to-br from-yellow-400 to-orange-400 opacity-70 blur-3xl"></div>
              <div className="absolute top-[40%] right-[25%] w-64 h-64 rounded-full bg-gradient-to-br from-orange-300 to-red-400 opacity-60 blur-2xl"></div>
            </div>

            {/* Content on top of gradient */}
            <div className="relative z-10 space-y-6">
              {/* Tabs */}
              <div className="flex gap-4 border-b border-white/30">
                <button
                  onClick={() => setActiveTab("contact")}
                  className={`pb-3 px-4 font-semibold transition-colors relative ${
                    activeTab === "contact"
                      ? "text-white"
                      : "text-white/70 hover:text-white"
                  }`}
                >
                  –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                  {activeTab === "contact" && (
                    <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-white" />
                  )}
                </button>
                <button
                  onClick={() => setActiveTab("company")}
                  className={`pb-3 px-4 font-semibold transition-colors relative ${
                    activeTab === "company"
                      ? "text-white"
                      : "text-white/70 hover:text-white"
                  }`}
                >
                  –†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏
                  {activeTab === "company" && (
                    <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-white" />
                  )}
                </button>
              </div>

              {/* Contact Info Tab */}
              {activeTab === "contact" && (
                <div className="space-y-6 animate-in fade-in duration-300">
                  <div className="flex items-start text-white">
                    <Icon name="Phone" className="mr-3 mt-1" size={20} />
                    <div>
                      <p className="font-semibold">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                      <a
                        href="tel:+73422700001"
                        className="text-white/90 hover:text-white hover:underline transition-all"
                      >
                        +7 (958) 240‚Äí00‚Äí10
                      </a>
                    </div>
                  </div>
                  <div className="flex items-start text-white">
                    <Icon name="Mail" className="mr-3 mt-1" size={20} />
                    <div>
                      <p className="font-semibold">Email</p>
                      <a
                        href="mailto:ivanickiy@centerai.tech"
                        className="text-white/90 hover:text-white hover:underline transition-all"
                      >
                        ivanickiy@centerai.tech
                      </a>
                    </div>
                  </div>
                  <div className="flex items-start text-white">
                    <Icon name="Clock" className="mr-3 mt-1" size={20} />
                    <div>
                      <p className="font-semibold">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</p>
                      <p className="text-white/90">
                        –ü–Ω-–ü—Ç: 9:00-18:00
                        <br />
                        –ü–æ–¥–¥–µ—Ä–∂–∫–∞: 24/7{" "}
                        <a
                          href="tel:88003337227"
                          className="hover:text-white hover:underline transition-all"
                        >
                          8 (800) 333-72-27
                        </a>
                      </p>
                    </div>
                  </div>
                  <div className="flex items-start text-white">
                    <Icon name="MapPin" className="mr-3 mt-1" size={20} />
                    <div>
                      <p className="font-semibold">–ê–¥—Ä–µ—Å</p>
                      <p className="text-white/90">
                        614007, –ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π, –≥–æ—Ä–æ–¥ –ü–µ—Ä–º—å,
                        <br />
                        —É–ª. –†–µ–≤–æ–ª—é—Ü–∏–∏, –¥. 14, –∫–≤. 57
                      </p>
                    </div>
                  </div>
                </div>
              )}

              {/* Company Info Tab */}
              {activeTab === "company" && (
                <div className="space-y-6 animate-in fade-in duration-300">
                  <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
                    <h3 className="font-display font-bold text-lg text-white flex items-center mb-4">
                      <Icon name="Building" className="mr-3" size={20} />
                      –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h3>
                    <div className="space-y-3 text-white">
                      <div>
                        <p className="text-sm text-white/70">
                          –ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
                        </p>
                        <p className="font-medium">–û–û–û "–ú–û–õ–û–¢–û–í –¢–†–ê–°–¢"</p>
                      </div>
                      <div>
                        <p className="text-sm text-white/70">–ò–ù–ù</p>
                        <p className="font-medium">5906060110</p>
                      </div>
                      <div>
                        <p className="text-sm text-white/70">–ö–ü–ü</p>
                        <p className="font-medium">590401001</p>
                      </div>
                      <div>
                        <p className="text-sm text-white/70">–û–ö–ü–û</p>
                        <p className="font-medium">73907860</p>
                      </div>
                      <div>
                        <p className="text-sm text-white/70">–î–∏—Ä–µ–∫—Ç–æ—Ä</p>
                        <p className="font-medium">–ò–≤–∞–Ω–∏—Ü–∫–∞—è –ï. –°.</p>
                      </div>
                      <div>
                        <p className="text-sm text-white/70">
                          –ü–∞—Ä—Ç–Ω–µ—Ä 1–° Fresh
                        </p>
                        <p className="font-medium">–ö–æ–¥ ‚Ññ 56678-57</p>
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {showOrderForm && (
        <CustomerOrderForm
          serviceType="–ó–∞–∫–∞–∑ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞"
          serviceDetails="–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è"
          onClose={() => setShowOrderForm(false)}
        />
      )}
    </section>
  );
}
